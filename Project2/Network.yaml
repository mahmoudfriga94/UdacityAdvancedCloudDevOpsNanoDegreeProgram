Description: >
    Mahmoud Friga: Deploy a high-availability web app using CloudFormation
    
Parameters:
    EnvironmentName:
        Description: Environment name
        Type: String

    CIDRBlock:
        Description: CIDR notation
        Type: String
        Default: 10.0.0.0/16
    PublicSubnet1CIDRBlock:
        Description: Public Subnet 1 CIDR Block
        Type: String
        Default: 10.0.0.0/24
    PublicSubnet2CIDRBlock:
        Description: Public Subnet 2 CIDR Block
        Type: String
        Default: 10.0.1.0/24
    PrivateSubnet1CIDRBlock:
        Description: Private Subnet 1 CIDR Block
        Type: String
        Default: 10.0.2.0/24
    PrivateSubnet2CIDRBlock:
        Description: Private Subnet 2 CIDR Block
        Type: String
        Default: 10.0.3.0/24

Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref CIDRBlock
            EnableDnsHostnames : true
            Tags: 
                - Key: Name
                  Value: !Ref EnvironmentName
    IGW:
        Type: AWS::EC2::InternetGateway
        Properties: 
            Tags: 
                - Key: Name
                  Value: !Ref EnvironmentName
    AttachGateway:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties: 
            InternetGatewayId: !Ref IGW
            VpcId: !Ref VPC
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select 
                 - 0
                 - Fn::GetAZs: !Ref 'AWS::Region'
            CidrBlock: !Ref PublicSubnet1CIDRBlock
            MapPublicIpOnLaunch: true
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName}-Public Subnet 1

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select 
                - 1
                - Fn::GetAZs: !Ref 'AWS::Region'
            CidrBlock: !Ref PublicSubnet2CIDRBlock
            MapPublicIpOnLaunch: true
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName}-Public Subnet 2


    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select 
                - 0
                - Fn::GetAZs: !Ref 'AWS::Region'           
            CidrBlock: !Ref PrivateSubnet1CIDRBlock
            MapPublicIpOnLaunch: false
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName}-Private Subnet 1

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select 
                 - 1
                 - Fn::GetAZs: !Ref 'AWS::Region'
            CidrBlock: !Ref PrivateSubnet2CIDRBlock
            MapPublicIpOnLaunch: false
            Tags: 
                -   Key: Name
                    Value: !Sub ${EnvironmentName}-Private Subnet 2
    EIP1:
        Type: AWS::EC2::EIP
        DependsOn: AttachGateway
        Properties: 
            Domain: vpc

    EIP2:
        Type: AWS::EC2::EIP
        DependsOn: AttachGateway
        Properties:
            Domain: vpc

    NATGW1: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt EIP1.AllocationId
            SubnetId: !Ref PublicSubnet1
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-NATGW1

    NATGW2: 
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt EIP2.AllocationId
            SubnetId: !Ref PublicSubnet2
            Tags:
                - Key: Name
                  Value: !Sub ${EnvironmentName}-NATGW2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-Public Route

    DefaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: AttachGateway
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref IGW

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2


    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-Private Routes 1

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NATGW1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName}-Private Routes 2

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NATGW2
    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

Outputs:
    VPC: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
          Name: !Sub ${EnvironmentName}-VPCID
    
    VPCPublicRouteTable: 
        Description: Public Routing
        Value: !Ref PublicRouteTable
        Export:
          Name: !Sub ${EnvironmentName}-PUB-RT

    VPCPrivateRouteTable1: 
        Description: Private routing 1
        Value: !Ref PrivateRouteTable1
        Export:
          Name: !Sub ${EnvironmentName}-PRI1-RT

    VPCPrivateRouteTable2: 
        Description: Private routing 2
        Value: !Ref PrivateRouteTable2
        Export:
          Name: !Sub ${EnvironmentName}-PRI2-RT

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PUB-NETS

    PublicSubnet1:
        Description: The reference to the first public subnet
        Value: !Ref PublicSubnet1
        Export:
          Name: !Sub ${EnvironmentName}-PUB1-SN

    PublicSubnet2:
        Description: The reference to the second public subnet
        Value: !Ref PublicSubnet2
        Export:
          Name: !Sub ${EnvironmentName}-PUB2-SN
          
    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PRIV-NETS